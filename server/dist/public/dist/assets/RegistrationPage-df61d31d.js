import{r as l,at as g,j as s,av as p,B as u}from"./index-a73d646c.js";import{z as e,S as x,I as r,C as h}from"./CustomLink-5e0d8361.js";import{E as w}from"./ErrorMessage-b5477403.js";import{F as j}from"./Form-70272b58.js";import"./TextField-0729200f.js";const b={email:"",password:"",confirmedPassword:""},f=e.object({email:e.string().trim().min(1,{message:"Field can not be empty"}).email({message:"Invalid email address"}),password:e.string().trim().min(1,{message:"Field can not be empty"}).min(6,{message:"Password must be at least 6 characters"}).max(20,{message:"Password must be less than 20 characters"}),confirmedPassword:e.string().trim().min(1,{message:"Field can not be empty"}).min(6,{message:"Password must be at least 6 characters"}).max(20,{message:"Password must be less than 20 characters"})}).refine(({confirmedPassword:t,password:a})=>t===a,{message:"Passwords do not match",path:["confirmedPassword"]}),P=()=>{const[t,a]=l.useState(""),m=g();async function n(i){const{email:c,password:d}=i;a("");try{const o=await p.registration(c,d);m({to:"/account/join"})}catch(o){a(o.response.data.errors[0].message)}}return s.jsxs(j,{schema:f,defaultValues:b,submit:n,submitButton:s.jsx(x,{}),children:[s.jsx(r,{name:"email",label:"Email",type:"email"}),s.jsx(r,{name:"password",label:"Password",type:"password"}),s.jsx(r,{name:"confirmedPassword",label:"Confirm password",type:"password"}),s.jsx(w,{message:t})]})},R=()=>s.jsxs(u,{component:"article",sx:{maxWidth:"25rem",mx:"auto",p:"1rem"},children:[s.jsx("h1",{children:"Registration"}),s.jsx(P,{}),s.jsxs("p",{children:["Already have an account? ",s.jsx(h,{to:"/signin",children:"Sign in"})]})]});export{R as default};
